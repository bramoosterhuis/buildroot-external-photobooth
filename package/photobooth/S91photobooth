#!/bin/sh
#
# Starts cog with the drm backend
# Adds a loopback video device
#

DAEMON="cog"
PIDFILE="/var/run/$DAEMON.pid"

NTPD_ARGS="\
	--set-permissions=all \
	--gapplication-app-id=io.project.photobooth \
	--enable-webgl=true \
	--enable-webrtc=true \
	--enable-accelerated-2d-canvas=true \
	localhost"

export XDG_RUNTIME_DIR=/var/run

# shellcheck source=/dev/null
[ -r "/etc/default/$DAEMON" ] && . "/etc/default/$DAEMON"

start() {
	printf 'Probing v4l2loopback: ' 
	modprobe v4l2loopback exclusive_caps=1 card_label="GPhoto2 Webcam"
	mstatus=$?
	if [ "$mstatus" -eq 0 ]; then
		echo "OK"
	else
		echo "FAIL"
	fi

	printf 'Starting %s: ' "$DAEMON"
	start-stop-daemon -S -q -p "$PIDFILE" -x "/usr/bin/$DAEMON" \
		-- $NTPD_ARGS -p "$PIDFILE"
	status=$?
	if [ "$status" -eq 0 ]; then
		echo "OK"
	else
		echo "FAIL"
	fi
	return "$status"
}

stop() {
	printf 'Stopping %s: ' "$DAEMON"
	start-stop-daemon -K -q -p "$PIDFILE"
	status=$?

	if [ "$status" -eq 0 ]; then
		rm -f "$PIDFILE"
		echo "OK"
	else
		echo "FAIL"
	fi

	printf 'Remove v4l2loopback: '

	rmmod v4l2loopback
	mstatus=$?
	if [ "$mstatus" -eq 0 ]; then
		echo "OK"
	else
		echo "FAIL"
	fi

	return "$status"
}

restart() {
	stop
	sleep 1
	start
}

case "$1" in
	start|stop|restart)
		"$1";;
	reload)
		# Restart, since there is no true "reload" feature.
		restart;;
	*)
		echo "Usage: $0 {start|stop|restart|reload}"
		exit 1
esac
